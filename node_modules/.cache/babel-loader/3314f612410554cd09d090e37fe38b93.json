{"ast":null,"code":"var _jsxFileName = \"/home/constantine/Desktop/jamming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: '',\n      playlistTracks: [{\n        'artist': \"blink\",\n        'name': 'hello',\n        'id': 123\n      }, {\n        'artist': \"blink 182\",\n        'name': 'hi',\n        'id': 13\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    console.log(\"REMOVE \", tracks);\n    tracks = tracks.filter(trackRem => trackRem.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.id);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(term) {\n    console.log(term);\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/constantine/Desktop/jamming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","console","log","filter","trackRem","name","trackUris","map","then","term","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar'\nimport SearchResults from '../SearchResults/SearchResults'\nimport Playlist from '../Playlist/Playlist'\n\nimport Spotify from '../../util/Spotify'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults : [],\n      playlistName : '',\n      playlistTracks: [{'artist':\"blink\", 'name':'hello', 'id': 123}, {'artist':\"blink 182\", 'name':'hi', 'id': 13}]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this)\n  }\n\n  addTrack(track){\n    let tracks = this.state.playlistTracks\n    if (tracks.find(savedTrack => savedTrack.id === track.id)){\n      return\n    }\n\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    console.log(\"REMOVE \", tracks)\n    tracks = tracks.filter(trackRem => trackRem.id !== track.id);\n\n    this.setState({playlistTracks: tracks})\n  }\n\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.id);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(term){\n    console.log(term)\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults});\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n\n          <SearchBar onSearch={this.search} />\n\n          <div className=\"App-playlist\">\n          \n            <SearchResults searchResults={this.state.searchResults}/>\n\n            <Playlist  playlistName={this.playlistName}\n                      playlistTracks={this.state.playlistTracks}\n                      onRemove={this.removeTrack}\n                      onNameChange={this.updatePlaylistName}\n                      onSave={this.savePlaylist}\n\n             />\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}